name: Deploy para Kubernetes

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clone code
      uses: actions/checkout@v2

    - name: Configurar JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Construir com Maven
      run: mvn clean package -DskipTests
      working-directory: carros

    - name: Construir imagem Docker
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/carros:latest .
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/carros:latest
      working-directory: carros

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Baixar cÃ³digo
      uses: actions/checkout@v2

    - name: Configurar kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'
        
    - name: Set up Kubernetes config and certificates
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        CA_CRT: ${{ secrets.CA_CRT }}
        CLIENT_CRT: ${{ secrets.CLIENT_CRT }}
        CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
      run: |
        # Create .kube and .minikube directories
        mkdir -p $HOME/.kube $HOME/.minikube/profiles/minikube
        
        # Decode and place the Kube config
        echo "${KUBE_CONFIG_DATA}" | base64 --decode > $HOME/.kube/config
        
        # Decode and place the CA, client certificate, and client key
        echo "${CA_CRT}" | base64 --decode > $HOME/.minikube/ca.crt
        echo "${CLIENT_CRT}" | base64 --decode > $HOME/.minikube/profiles/minikube/client.crt
        echo "${CLIENT_KEY}" | base64 --decode > $HOME/.minikube/profiles/minikube/client.key

    
    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: /home/runner/.kube/config
      run: |
        kubectl apply -f k8s/deployment.yaml --validate=false
      working-directory: carros
